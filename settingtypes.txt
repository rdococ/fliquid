#    If enabled, displaces liquid rather than destroying it when placing nodes.
#    This may increase server load if you're building deep underwater.
fliquid_displace_liquids (Displace liquids when placing nodes) bool true

[Simulation]

#    If enabled, the mod only tries to achieve an approximate equilibrium (a single level difference).
#    This may reduce the server load when dealing with large bodies of liquids, but reduces accuracy.
#    The effects may only be visible once liquid nodes are updated.
fliquid_approximate_equilibrium (Require only an approximate equilibrium) bool true

#    If enabled, liquid compression will be simulated, allowing connected bodies of compressible liquid to equalize.
#    There are no complex calculations to do this, but it can increase liquid updates.
#    The effects may only be visible once liquid nodes are updated.
fliquid_support_compression (Support liquid compression) bool true

#    How many times a finite liquid node should attempt to update in one second.
fliquid_simulation_speed (Simulation speed) int 10

#    How many finite liquid node updates are allowed per second.
#    Updates past this point will be dropped.
fliquid_max_updates_per_second (Maximum updates per second) int 10000

[*Experimental]

#    If enabled, adds experimental blocks used to test the mod.
fliquid_experimental_blocks (Add experimental blocks and items) bool false

#    Sets how many different levels of liquid there are between nothing and a full node of liquid.
#    It's good to set this to a highly composite number, even if floating point levels are being used.
#    Changing this in pre-existing worlds will result in weirdness as levels are converted between different precisions!
fliquid_level_precision (Liquid level precision) int 360

#    If enabled (and metadata is enabled), uses floating point numbers to store liquid levels.
#    This will cause slight violations of conservation of mass due to rounding errors!
fliquid_use_floating_point (Use floating point liquid levels) bool false